
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ++ Кальянов ДЗ_Нетология
	
	Команда = Команды.Добавить("ПересчитатьСУчётомСкидки");
	Команда.Заголовок = "Пересчитать с учетом скидки";
	Команда.Действие = "ПересчитатьСУчётомСкидки";  
	
	КнопкаФормы = Элементы.Добавить("ПересчитатьСУчётомСкидки",Тип("КнопкаФормы"),Элементы.ГруппаШапкаЛево);
	КнопкаФормы.ИмяКоманды = "ПересчитатьСУчётомСкидки";
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка; 
	
	НовыйЭлемент = Элементы.Добавить("НашНовыйЭлемент",Тип("ПолеФормы"),Элементы.ГруппаШапкаЛево);
	НовыйЭлемент.ПутьКДанным = "Объект.КВ_СогласованнаяСкидка";
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
	НовыйЭлемент.Заголовок = "Скидка %";
	НовыйЭлемент.УстановитьДействие("ПриИзменении","КВ_СогласованнаяСкидкаПриИзменении");  
	
	///--
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Асинх Процедура КВ_СогласованнаяСкидкаПриИзменении(Элемент)
		// ++ Кальянов ДЗ_Нетология

	Если Объект.Товары.Количество() > 0 или Объект.Услуги.Количество() > 0 Тогда
		Ответ = Ждать ВопросАсинх("Нужно ли пересчитать суммы в табличной части?", РежимДиалогаВопрос.ДаНет); 
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ПересчитатьСуммыПоСтрокам();
		КонецЕсли;           
		
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю("Табличная часть пуста. Перерасчёт невозможен.");
	КонецЕсли;  
	
	РассчитатьСуммуДокумента();
	//-

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ПересчитатьСУчётомСкидки(Команда)
		ПересчитатьСуммыПоСтрокам();
КонецПроцедуры



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПересчитатьСуммыПоСтрокам()
		// ++ Кальянов ДЗ_Нетология
	
	Скидка = Объект.КВ_СогласованнаяСкидка;
	КоэффициентСкидки = (100 - Скидка) / 100;
	
	Для Каждого Строка Из Объект.Товары Цикл
		Строка.Сумма = РассчитатьСуммуСтрокиСУчетомСкидки(Строка.Цена, Строка.Количество, КоэффициентСкидки);
	КонецЦикла;   
	
	Для Каждого Строка Из Объект.Услуги Цикл
		Строка.Сумма = РассчитатьСуммуСтрокиСУчетомСкидки(Строка.Цена, Строка.Количество, КоэффициентСкидки);
	КонецЦикла; 
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
		//-
КонецПроцедуры


&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаСервере
Функция РассчитатьСуммуСтрокиСУчетомСкидки(Цена, Количество, КоэффициентСкидки = Неопределено)
	
	Скидка = Объект.КВ_СогласованнаяСкидка;
	
	Если КоэффициентСкидки = Неопределено Тогда
		КоэффициентСкидки = (100 - Скидка) / 100;
	КонецЕсли;
	
	Возврат Цена * Количество * КоэффициентСкидки;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

